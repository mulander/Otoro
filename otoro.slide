Otoro
fat tuna in the OpenBSD ports fish-tank
15:04 2 Jan 2006
Tags: openbsd, ports

Adam Wolk
OpenBSD Developer
awolk@openbsd.org
https://www.openbsd.org

https://blog.tintagel.pl
@mulander

https://koparo.com
@koparo_golf

* Otoro

(oh-toh-roh) The fattiest portion of the tuna, found on the underside of the fish.
http://www.sushifaq.com/sushi-sashimi-info/sushi-terminology/

.image images/otoro.png

* About me

.image images/avatar.jpeg _ 100

OpenBSD User sine April 2014;

OpenBSD Developer since Febuary 2016;

Co-Founder of koparo.com;

Linux user since mid 90's;

Interested in infosec, programming & gaming;

7 years in the banking sector. Wrote Perl, Ruby and other code for a living in the past.


* About OpenBSD

Started as a fork of NetBSD in 1995

Mostly known for:

- OpenSSH
- LibreSSL (no, not OpenSSL)
- pf
- carp
- clockwork releases every 6 months
- with release songs & artwork
- more...
.link https://www.openbsd.org/innovations.html innovations

* Being MAINTAINER

Being a maintainer is more then just getting a piece of software to compile.

- test the software, fully
- patch for platform best practices (strlcpy, arc4random, pledge)
- upstream patches
- proxy bug reports from OpenBSD users to upstream
- become upstream
- make choices, cut dependencies, write rc scripts

Don't be afraid to disable features, changing a default wildcard network listen to a localhost one etc.

OpenBSD expects the packagers to care about people using the software.

* Binary packages

We expect people to use binary packages. The actual ports system is used by people preparing the ports & building binary packages.

Binary packages are provided for:
 - the stable release
 - snapshots of -CURRENT

Ongoing updates for stable releases without going -CURRENT are possible by using
.link https://stable.mtier.org/ m:tier

Binary package update frequencies depend on the platform, amd64 is out almost daily. You might need to wait longer for others.

* Reviewing port updates

Two developers need to look at a port at minimum to get it included.

What is often found in a typical port review?

- non-portable constructs (hello bash users)
- security issues (horrible defaults)
- tree pollution
- software crashing
- regular bugs
- missing dependencies
- wrong build options (debug/release)

Worth the time to double check.

* Porting tools

- Porting Guide
.link https://www.openbsd.org/faq/ports/guide.html
- portcheck
- portroach
.link http://portroach.openbsd.org/
- make port-lib-depends-check
- make update-plist
- ktrace
- gdb (egdb) - for C/C++ based ports
- portimport (for developers)
- port-modules

* SQL ports

What if you could have the whole ports tree as a single sqlite3 database?

Need a list of all ports depending on lang/go?

    $ sqlite3 /usr/local/share/sqlports "select * from modules where value='lang/go';"
    devel/go-check-v1|lang/go
    devel/go-tools|lang/go
    devel/hub|lang/go
    net/go-net|lang/go
    ...

Just `pkg_add` `sqlports` and query all the info you need.

* Meaning of ports for OpenBSD?

We often turn on intrusive exploit mitigations by default. W^X, ASLR and pledge as quick examples.

The ports tree is a great way to have a large portion of existing software exposed to those mitigations at large.

We might not be as big as your typical Linux distribution, but we are also large enough to get noticed.

We do upstream patches and we do annoy upstream with stuff like arc4random.

M. W. Lucas nicely noted on several occasions that OpenBSD is the pressure cooker of the open source ecosystem.

We break our ports tree often, so other *nix systems can have the nice security features enabled by default.

* Is this network secure?

Hands on - porting routersploit

.image images/routersploit.png

* Supporting the project

.link http://openbsdstore.com/ CD's & other swag
.image images/MUG3.png

.link http://www.openbsdfoundation.org/ The OpenBSD Foundation

Any questions?
